##############################################################################
# 6 - Sum Square Difference
##############################################################################
# of first 100 natural numbers

sum_squares = sum([x**2 for x in range(101)])
square_sum = sum(range(101)) ** 2
print("Problem 6:", square_sum - sum_squares)

##############################################################################
# 7 - 10,001th prime number
##############################################################################

all_primes = [2]

def is_prime(n):
    for i in all_primes:
        if n % i == 0:
            return(False)
    return(True)

prime = 3
try_this = 3
for i in range(int(1E4 - 1)):
    all_primes += [prime]
    while True:
        try_this += 2
        if is_prime(try_this):
            prime = try_this
            break

print("Problem 7:", prime)

##############################################################################
# 8 - Largest product in a series
##############################################################################

number = 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
number = str(number)

winner = 1
for i in range(1000-13):
    product = 1
    for j in range(13):
        product *= int(number[i + j])
    if product > winner:
        winner = product

print("Problem 8:", winner)

##############################################################################
# 9 - Pythagorean triplet
##############################################################################

options = []
for a in range(1, 333):
    for b in range(a+1, (1000 - a)//2):
        options += [{"a": a, "b": b, "c": 1000 - a - b}]

for option in options:
    if option["a"]**2 + option["b"]**2 == option["c"]:
        break

print("Problem 9:", option["a"] * option["b"] * option["c"])

##############################################################################
# 10 - Sum of primes below two million
##############################################################################

for i in range(all_primes[-1], int(2E6), 2):
    if is_prime(i):
        all_primes += [i]

print("Problem 10:", sum(all_primes))
